name: Manual Release Gem

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0) - Leave empty to use current version from version.rb'
        required: false
        type: string
      publish_to_rubygems:
        description: 'Publish to RubyGems.org (requires API key)'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.1', '3.2', '3.3']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Configure bundler
      run: |
        bundle config set frozen false
        bundle config set deployment false

    - name: Run tests
      run: bundle exec rake spec

    - name: Run RuboCop
      run: bundle exec rubocop
      if: matrix.ruby-version == '3.3'

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      gem-name: ${{ steps.build-gem.outputs.gem-name }}
      version: ${{ steps.extract-version.outputs.version }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Configure bundler
      run: |
        bundle config set frozen false
        bundle config set deployment false

    - name: Extract version
      id: extract-version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Update version in version.rb
      run: |
        VERSION=${{ steps.extract-version.outputs.version }}
        sed -i "s/VERSION = \".*\"/VERSION = \"$VERSION\"/" lib/lall/version.rb
        echo "Updated version to $VERSION"

    - name: Build gem
      id: build-gem
      run: |
        gem build lall.gemspec
        GEM_NAME=$(ls *.gem)
        echo "gem-name=$GEM_NAME" >> $GITHUB_OUTPUT
        echo "Built gem: $GEM_NAME"

    - name: Upload gem artifact
      uses: actions/upload-artifact@v4
      with:
        name: gem-package
        path: "*.gem"
        retention-days: 5

  publish-github:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Configure bundler
      run: |
        bundle config set frozen false
        bundle config set deployment false

    - name: Download gem artifact
      uses: actions/download-artifact@v4
      with:
        name: gem-package

    - name: Configure GitHub Packages
      run: |
        mkdir -p ~/.gem
        cat << EOF > ~/.gem/credentials
        ---
        :github: Bearer ${{ secrets.GITHUB_TOKEN }}
        EOF
        chmod 0600 ~/.gem/credentials

    - name: Publish to GitHub Packages
      run: |
        GEM_NAME="${{ needs.build.outputs.gem-name }}"
        gem push --key github --host https://rubygems.pkg.github.com/${{ github.repository_owner }} $GEM_NAME
        echo "Published $GEM_NAME to GitHub Packages"

  publish-rubygems:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Configure bundler
      run: |
        bundle config set frozen false
        bundle config set deployment false

    - name: Download gem artifact
      uses: actions/download-artifact@v4
      with:
        name: gem-package

    - name: Configure RubyGems
      run: |
        mkdir -p ~/.gem
        cat << EOF > ~/.gem/credentials
        ---
        :rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}
        EOF
        chmod 0600 ~/.gem/credentials

    - name: Publish to RubyGems.org
      run: |
        GEM_NAME="${{ needs.build.outputs.gem-name }}"
        gem push $GEM_NAME
        echo "Published $GEM_NAME to RubyGems.org"

  create-release:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Download gem artifact
      uses: actions/download-artifact@v4
      with:
        name: gem-package

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.build.outputs.version }}
        release_name: Release v${{ needs.build.outputs.version }}
        body: |
          ## Changes in v${{ needs.build.outputs.version }}
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ### From GitHub Packages
          ```bash
          gem install lall --source "https://rubygems.pkg.github.com/egrif"
          ```
          
          ### From RubyGems.org
          ```bash
          gem install lall
          ```
          
          ## Usage
          
          ```bash
          lall -s STRING [-e ENV[,ENV2,...]] [-g GROUP] [OPTIONS]
          ```
          
          See [README.md](README.md) for complete documentation.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ needs.build.outputs.gem-name }}
        asset_name: ${{ needs.build.outputs.gem-name }}
        asset_content_type: application/octet-stream
