name: Auto Tag on Version Change

on:
  push:
    branches:
      - main
    paths:
      - 'lib/lall/version.rb'

permissions:
  contents: write

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history to compare versions

    - name: Extract current version
      id: current-version
      run: |
        CURRENT_VERSION=$(grep "VERSION = " lib/lall/version.rb | sed "s/.*VERSION = '\([^']*\)'.*/\1/")
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"

    - name: Check if tag already exists
      id: check-tag
      run: |
        TAG_NAME="v${{ steps.current-version.outputs.version }}"
        if git tag -l | grep -q "^$TAG_NAME$"; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag $TAG_NAME already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag $TAG_NAME does not exist, will create it"
        fi

    - name: Extract commit message
      id: commit-info
      if: steps.check-tag.outputs.exists == 'false'
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "message<<EOF" >> $GITHUB_OUTPUT
        echo "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create and push tag
      if: steps.check-tag.outputs.exists == 'false'
      run: |
        TAG_NAME="v${{ steps.current-version.outputs.version }}"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create annotated tag with the commit message
        git tag -a "$TAG_NAME" -m "Release $TAG_NAME" -m "${{ steps.commit-info.outputs.message }}"
        git push origin "$TAG_NAME"
        
        echo "Created and pushed tag: $TAG_NAME"

    - name: Create GitHub Release
      if: steps.check-tag.outputs.exists == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="v${{ steps.current-version.outputs.version }}"
        RELEASE_BODY=$(cat << 'EOF'
        ${{ steps.commit-info.outputs.message }}
        
        ## Installation
        
        ### From GitHub Packages
        ```bash
        gem install lall --source "https://rubygems.pkg.github.com/egrif"
        ```
        
        ### From RubyGems.org (after manual publish)
        ```bash
        gem install lall
        ```
        
        ## Usage
        
        ```bash
        lall -s STRING [-e ENV[,ENV2,...]] [-g GROUP] [OPTIONS]
        ```
        
        See [README.md](README.md) for complete documentation and [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        EOF
        )
        
        gh release create "$TAG_NAME" \
          --title "Release $TAG_NAME" \
          --notes "$RELEASE_BODY" \
          --latest
