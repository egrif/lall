name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.1', '3.2', '3.3']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: false

    - name: Configure bundler and install dependencies
      run: |
        bundle config set frozen false
        bundle config set deployment false
        bundle install

    - name: Debug bundle info
      run: |
        echo "Ruby version: $(ruby --version)"
        echo "Bundler version: $(bundle --version)"
        echo "Gem environment:"
        gem env

    - name: Run unit tests
      run: bundle exec rake spec

    - name: Run integration tests (without lotus)
      run: bundle exec rspec spec/integration_spec.rb --tag ~integration

    - name: Check code style
      run: bundle exec rubocop
      if: matrix.ruby-version == '3.3'

    - name: Build gem (validation)
      run: gem build lall.gemspec
      if: matrix.ruby-version == '3.3'

    - name: Generate coverage report
      run: |
        bundle exec rspec --exclude-pattern spec/**/*integration* --require spec_helper || true
        if [ -f coverage/coverage.json ]; then
          echo "Coverage report generated"
        else
          echo "Warning: Coverage report not generated"
        fi
      if: matrix.ruby-version == '3.3'

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: false

    - name: Configure bundler and install dependencies
      run: |
        bundle config set frozen false
        bundle config set deployment false
        bundle install

    - name: Run bundle audit
      run: |
        gem install bundle-audit
        bundle audit --update

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: false

    - name: Configure bundler and install dependencies
      run: |
        bundle config set frozen false
        bundle config set deployment false
        bundle install

    - name: Lint with RuboCop
      run: bundle exec rubocop

    - name: Check for spelling errors
      run: npx cspell "**/*.{rb,md,yml,yaml}" --config .cspell.json
